#include <stdio.h>
#include <stdlib.h>
#include <limits.h>

int cmpfunc(const void *a, const void *b) {
    long long x = *(const long long*)a;
    long long y = *(const long long*)b;
    if (x < y) return -1;
    else if (x > y) return 1;
    else return 0;
}

int main() {
    int n, k;
    scanf("%d", &n);
    scanf("%d", &k);
    
    long long *arr = (long long*)malloc(n * sizeof(long long));
    for (int i = 0; i < n; i++) {
        scanf("%lld", &arr[i]);
    }
    
    qsort(arr, n, sizeof(long long), cmpfunc);
    
    long long min_unfairness = LLONG_MAX;
    
    for (int i = 0; i <= n -k; i++) {
        long long unfairness = arr[i + k - 1] - arr[i];
        if (unfairness < min_unfairness) {
            min_unfairness = unfairness;
        }
    }
    
    printf("%lld\n", min_unfairness);
    
    free(arr);
    return 0;
}
